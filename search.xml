<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据结构与算法</title>
    <url>/2022/12/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="1、数据结构"><a href="#1、数据结构" class="headerlink" title="1、数据结构"></a>1、数据结构</h2><h3 id="1-1、稀疏数组"><a href="#1-1、稀疏数组" class="headerlink" title="1.1、稀疏数组"></a>1.1、稀疏数组</h3><p>如果一个二维数据大部分元素为0，或者同一个值的数组时，可以使用稀疏数组来保存该数组。</p>
<p>保存原始二维数组总共存在多少几行几列，保存存在数据的位置和值，从而缩小数组大小</p>
<h3 id="1-2、应用实例"><a href="#1-2、应用实例" class="headerlink" title="1.2、应用实例"></a>1.2、应用实例</h3><p>使用稀疏数组实现棋盘保存到磁盘，再读取磁盘数据恢复棋盘记录</p>
<p>整体思路：</p>
<ol>
<li>将原始二维数组，转换成稀疏数组，再写入磁盘</li>
<li>读取磁盘中的稀疏数组，转换成二维数组，恢复棋盘</li>
</ol>
<p>代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.gxl.datastructure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SparseArray</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个11*11的二维数组</span></span><br><span class="line">        <span class="type">int</span> source[][] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 0：无棋子，1：黑子，2：蓝子</span></span><br><span class="line">        source[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        source[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        source[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出二维数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : source) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> row : rows) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,row);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将二维数组转换成稀疏数组</span></span><br><span class="line">        <span class="comment">//1、遍历二维数组获取非0数组个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : source) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> row : rows) &#123;</span><br><span class="line">                <span class="keyword">if</span> (row!=<span class="number">0</span>)&#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、创建稀疏数组</span></span><br><span class="line">        <span class="type">int</span> taget[][] = <span class="keyword">new</span> <span class="title class_">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、给稀疏数组赋值</span></span><br><span class="line">        taget[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        taget[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        taget[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指定行数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历原始数组，将不为0的值值和坐标进行赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (source[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    taget[count][<span class="number">0</span>] = i;</span><br><span class="line">                    taget[count][<span class="number">1</span>] = j;</span><br><span class="line">                    taget[count][<span class="number">2</span>] = source[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出稀疏数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : taget) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> row : rows) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,row);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入磁盘</span></span><br><span class="line">        writeToFile(taget);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取磁盘文件</span></span><br><span class="line">        <span class="type">int</span>[][] ints = readFile();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : ints) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> row : rows) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,row);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据稀疏数组还原二维数组</span></span><br><span class="line">        <span class="type">int</span> review[][] = <span class="keyword">new</span> <span class="title class_">int</span>[ints[<span class="number">0</span>][<span class="number">0</span>]][ints[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; ints.length; i++) &#123;</span><br><span class="line">            review[ints[i][<span class="number">0</span>]][ints[i][<span class="number">1</span>]] = ints[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : review) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> row : rows) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot;%d\t&quot;</span>,row);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeToFile</span><span class="params">(<span class="type">int</span>[][] taget)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;D:/chrom/a.txt&quot;</span>,<span class="literal">false</span>)));</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span>[] ints : taget) &#123;</span><br><span class="line">                writer.write(Arrays.toString(ints)+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            writer.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[][] readFile() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> array[][] = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;D:/chrom/a.txt&quot;</span>));</span><br><span class="line"></span><br><span class="line">            List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (s!=<span class="literal">null</span>&amp;&amp;!<span class="string">&quot;&quot;</span>.equals(s))&#123;</span><br><span class="line">                    list.add(s);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            array = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()][<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                String[] split = list.get(i).split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; split.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j==<span class="number">0</span>)&#123;</span><br><span class="line">                        array[i][j] = Integer.valueOf(split[j].replace(<span class="string">&quot;[&quot;</span>,<span class="string">&quot;&quot;</span>).trim());</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (j==<span class="number">2</span>)&#123;</span><br><span class="line">                        array[i][j] = Integer.valueOf(split[j].replace(<span class="string">&quot;]&quot;</span>,<span class="string">&quot;&quot;</span>).trim());</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        array[i][j] = Integer.valueOf(split[j].trim());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
